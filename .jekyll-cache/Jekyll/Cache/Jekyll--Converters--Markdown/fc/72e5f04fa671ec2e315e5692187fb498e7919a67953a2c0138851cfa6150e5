I"	<<h2 id="prerequisites">Prerequisites</h2>

<p>Follow the instructions in the <a href="https://jekyllrb.com/docs/installation/">Jekyll Docs</a> to complete the installation of <code class="language-plaintext highlighter-rouge">Ruby</code>, <code class="language-plaintext highlighter-rouge">RubyGems</code>, <code class="language-plaintext highlighter-rouge">Jekyll</code>, and <code class="language-plaintext highlighter-rouge">Bundler</code>. In addition, <a href="https://git-scm.com/">Git</a> is also required to be installed.</p>

<h2 id="installation">Installation</h2>

<h3 id="creating-a-new-site">Creating a New Site</h3>

<p>There are two ways to create a new repository for this theme:</p>

<ul>
  <li><a href="#option-1-using-the-chirpy-starter"><strong>Using the Chirpy Starter</strong></a> - Easy to upgrade, isolates irrelevant project files so you can focus on writing.</li>
  <li><a href="#option-2-forking-on-github"><strong>Forking on GitHub</strong></a> - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.</li>
</ul>

<h4 id="option-1-using-the-chirpy-starter">Option 1. Using the Chirpy Starter</h4>

<p>Create a new repository from the <a href="https://github.com/cotes2020/chirpy-starter/generate"><strong>Chirpy Starter</strong></a> and name it <code class="language-plaintext highlighter-rouge">&lt;GH_USERNAME&gt;.github.io</code>, where <code class="language-plaintext highlighter-rouge">GH_USERNAME</code> represents your GitHub username.</p>

<h4 id="option-2-forking-on-github">Option 2. Forking on GitHub</h4>

<p><a href="https://github.com/cotes2020/jekyll-theme-chirpy/fork">Fork <strong>Chirpy</strong></a> on GitHub and rename it to <code class="language-plaintext highlighter-rouge">&lt;GH_USERNAME&gt;.github.io</code>. Please note that the default branch code is in development.  If you want the site to be stable, please switch to the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/tags">latest tag</a> and start writing.</p>

<p>And then execute:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bash tools/init.sh
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote class="prompt-note">
  <p>If you don’t want to deploy your site on GitHub Pages, append option <code class="language-plaintext highlighter-rouge">--no-gh</code> at the end of the above command.</p>
</blockquote>

<p>The above command will:</p>

<ol>
  <li>Removes some files or directories from your repository:
    <ul>
      <li><code class="language-plaintext filepath highlighter-rouge">.travis.yml</code></li>
      <li>files under <code class="language-plaintext filepath highlighter-rouge">_posts</code></li>
      <li>folder <code class="language-plaintext filepath highlighter-rouge">docs</code></li>
    </ul>
  </li>
  <li>
    <p>If the option <code class="language-plaintext highlighter-rouge">--no-gh</code> is provided, the directory <code class="language-plaintext filepath highlighter-rouge">.github</code> will be deleted. Otherwise, set up the GitHub Action workflow by removing the extension <code class="language-plaintext filepath highlighter-rouge">.hook</code> of <code class="language-plaintext filepath highlighter-rouge">.github/workflows/pages-deploy.yml.hook</code>, and then remove the other files and directories in the folder <code class="language-plaintext filepath highlighter-rouge">.github</code>.</p>
  </li>
  <li>
    <p>Removes item <code class="language-plaintext highlighter-rouge">Gemfile.lock</code> from <code class="language-plaintext filepath highlighter-rouge">.gitignore</code>.</p>
  </li>
  <li>Creates a new commit to save the changes automatically.</li>
</ol>

<h3 id="installing-dependencies">Installing Dependencies</h3>

<p>Before running for the first time, go to the root directory of your site, and install dependencies as follows:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="usage">Usage</h2>

<h3 id="configuration">Configuration</h3>

<p>Update the variables of <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> as needed. Some of them are typical options:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">url</code></li>
  <li><code class="language-plaintext highlighter-rouge">avatar</code></li>
  <li><code class="language-plaintext highlighter-rouge">timezone</code></li>
  <li><code class="language-plaintext highlighter-rouge">lang</code></li>
</ul>

<h3 id="customing-stylesheet">Customing Stylesheet</h3>

<p>If you need to customize the stylesheet, copy the theme’s <code class="language-plaintext filepath highlighter-rouge">assets/css/style.scss</code> to the same path on your Jekyll site, and then add the custom style at the end of the style file.</p>

<p>Starting from <a href="https://github.com/cotes2020/jekyll-theme-chirpy/releases/tag/v4.1.0"><code class="language-plaintext highlighter-rouge">v4.1.0</code></a>, if you want to overwrite the SASS variables defined in <code class="language-plaintext filepath highlighter-rouge">_sass/addon/variables.scss</code>, create a new file <code class="language-plaintext filepath highlighter-rouge">_sass/variables-hook.scss</code> and assign new values to the target variable in it.</p>

<h3 id="running-local-server">Running Local Server</h3>

<p>You may want to preview the site contents before publishing, so just run it by:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle <span class="nb">exec </span>jekyll s
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Or run the site on Docker with the following command:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>docker run <span class="nt">-it</span> <span class="nt">--rm</span> <span class="se">\</span>
<span class="gp">    --volume="$</span>PWD:/srv/jekyll<span class="s2">" </span><span class="se">\</span><span class="s2">
</span><span class="go">    -p 4000:4000 jekyll/jekyll \
    jekyll serve
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>After a while, the local service will be published at <em><a href="http://127.0.0.1:4000">http://127.0.0.1:4000</a></em>.</p>

<h2 id="deployment">Deployment</h2>

<p>Before the deployment begins, check out the file <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> and make sure the <code class="language-plaintext highlighter-rouge">url</code> is configured correctly. Furthermore, if you prefer the <a href="https://help.github.com/en/github/working-with-github-pages/about-github-pages#types-of-github-pages-sites"><strong>project site</strong></a> and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than <strong>GitHub Pages</strong>, remember to change the <code class="language-plaintext highlighter-rouge">baseurl</code> to your project name that starts with a slash, e.g, <code class="language-plaintext highlighter-rouge">/project-name</code>.</p>

<p>Now you can choose ONE of the following methods to deploy your Jekyll site.</p>

<h3 id="deploy-by-using-github-actions">Deploy by Using Github Actions</h3>

<p>For security reasons, GitHub Pages build runs on <code class="language-plaintext highlighter-rouge">safe</code> mode, which restricts us from using plugins to generate additional page files. Therefore, we can use <strong>GitHub Actions</strong> to build the site, store the built site files on a new branch, and use that branch as the source of the GitHub Pages service.</p>

<p>Quickly check the files needed for GitHub Actions build:</p>

<ul>
  <li>
    <p>Ensure your Jekyll site has the file <code class="language-plaintext filepath highlighter-rouge">.github/workflows/pages-deploy.yml</code>. Otherwise, create a new one and fill in the contents of the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/blob/master/.github/workflows/pages-deploy.yml.hook">sample file</a>, and the value of the <code class="language-plaintext highlighter-rouge">on.push.branches</code> should be the same as your repo’s default branch name.</p>
  </li>
  <li>
    <p>Ensure your Jekyll site has file <code class="language-plaintext filepath highlighter-rouge">tools/deploy.sh</code>. Otherwise, copy it from here to your Jekyll site.</p>
  </li>
  <li>
    <p>Furthermore, if you have committed <code class="language-plaintext filepath highlighter-rouge">Gemfile.lock</code> to the repo, and your runtime system is not Linux, don’t forget to update the platform list in the lock file:</p>

    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle lock <span class="nt">--add-platform</span> x86_64-linux
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<p>After the above steps, rename your repository to <code class="language-plaintext highlighter-rouge">&lt;GH_USERNAME&gt;.github.io</code> on GitHub.</p>

<p>Now publish your Jekyll site by:</p>

<ol>
  <li>
    <p>Push any commit to remote to trigger the GitHub Actions workflow. Once the build is complete and successful, a new remote branch named <code class="language-plaintext highlighter-rouge">gh-pages</code> will appear to store the built site files.</p>
  </li>
  <li>
    <p>Browse to your repository on GitHub. Select the tab <em>Settings</em>, then click <em>Pages</em> in the left navigation bar, and then in the section <strong>Source</strong> of <em>GitHub Pages</em>, select the <code class="language-plaintext highlighter-rouge">/(root)</code> directory of branch <code class="language-plaintext highlighter-rouge">gh-pages</code> as the <a href="https://docs.github.com/en/github/working-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site">publishing source</a>. Remember to click <kbd>Save</kbd> before leaving.</p>

    <p><img src="/posts/20190809/gh-pages-sources.png" alt="gh-pages-sources" width="1580" height="250" /></p>
  </li>
  <li>
    <p>Visit your website at the address indicated by GitHub.</p>
  </li>
</ol>

<h3 id="manually-build-and-deploy">Manually Build and Deploy</h3>

<p>On self-hosted servers, you cannot enjoy the convenience of <strong>GitHub Actions</strong>. Therefore, you should build the site on your local machine and then upload the site files to the server.</p>

<p>Go to the root of the source project, and build your site as follows:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span><span class="nv">JEKYLL_ENV</span><span class="o">=</span>production bundle <span class="nb">exec </span>jekyll b
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Or build the site on Docker:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>docker run <span class="nt">-it</span> <span class="nt">--rm</span> <span class="se">\</span>
<span class="go">    --env JEKYLL_ENV=production \
</span><span class="gp">    --volume="$</span>PWD:/srv/jekyll<span class="s2">" </span><span class="se">\</span><span class="s2">
</span><span class="go">    jekyll/jekyll \
    jekyll build
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Unless you specified the output path, the generated site files will be placed in folder <code class="language-plaintext filepath highlighter-rouge">_site</code> of the project’s root directory. Now you should upload those files to the target server.</p>

<h2 id="upgrading">Upgrading</h2>

<p>It depends on how you use the theme:</p>

<ul>
  <li>
    <p>If you are using the theme gem (there will be <code class="language-plaintext highlighter-rouge">gem "jekyll-theme-chirpy"</code> in the <code class="language-plaintext filepath highlighter-rouge">Gemfile</code>), editing the <code class="language-plaintext filepath highlighter-rouge">Gemfile</code> and update the version number of the theme gem, for example:</p>

    <div class="language-diff nolineno highlighter-rouge" file="Gemfile"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="gd">- gem "jekyll-theme-chirpy", "~&gt; 3.2", "&gt;= 3.2.1"
</span><span class="gi">+ gem "jekyll-theme-chirpy", "~&gt; 3.3", "&gt;= 3.3.0"
</span></pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>And then execute the following command:</p>

    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>bundle update jekyll-theme-chirpy
</pre></td></tr></tbody></table></code></pre></div>    </div>

    <p>As the version upgrades, the critical files (for details, see the <a href="https://github.com/cotes2020/chirpy-starter">Startup Template</a>) and configuration options will change. Please refer to the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/wiki/Upgrade-Guide">Upgrade Guide</a> to keep your repo’s files in sync with the latest version of the theme.</p>
  </li>
  <li>
    <p>If you forked from the source project (there will be <code class="language-plaintext highlighter-rouge">gemspec</code> in the <code class="language-plaintext filepath highlighter-rouge">Gemfile</code> of your site), then merge the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/tags">latest upstream tags</a> into your Jekyll site to complete the upgrade.
The merge is likely to conflict with your local modifications. Please be patient and careful to resolve these conflicts.</p>
  </li>
</ul>

:ET